#!/bin/bash
#!/bin/bash
# This script parse the related address from function start point

if [ "$1" == "" ]; then
    echo new addr "\"    #00  pc 02c03024  /system/lib/libgaiaframework.so "\
        "(gaia::GMediaScanner::scanMtpFile(android::sp<gaia::String> const&,"\
        " android::sp<gaia::String> const&, int, int)+879)\""
else
SYMBOL_PATH="/home/quaker/w/device/out/target/product/dlpdtu/symbols"
TOOL_OBJDUMP="/home/quaker/w/device/prebuilts/gcc/linux-x86/arm/arm-eabi-4.6/bin/arm-eabi-objdump"
TOOL_ADDR2LINE="/home/quaker/w/device/prebuilts/gcc/linux-x86/arm/arm-eabi-4.6/bin/arm-eabi-addr2line"

# filename
SYMBOL_FILE=`echo "$GEDIT_CURRENT_LINE" | sed 's/\(.*\)\(#[0-9][0-9]\)\s*pc\s*\([0-9a-fA-F]\{,8\}\)\s*\(.*\)/\4/g'`
SYMBOL_FILE=`echo "$SYMBOL_FILE" | sed 's/ (.*)//g'`
#replace lib path which in package
SYMBOL_FILE=`echo "$SYMBOL_FILE" | sed 's/data\/data\/[^\/]*\/lib/system\/lib/g'`

# function
SYMBOL_FUNC=`echo "$GEDIT_CURRENT_LINE" | sed 's/\(.*\)\(#[0-9][0-9]\)\s*pc\s*\([0-9a-fA-F]\{,8\}\)\s*\(.*\)/\4/g'`
SYMBOL_OFFSET=`echo "$SYMBOL_FUNC" | sed 's/.* (\(.*\)+\([0-9]*\))/\2/g'`
SYMBOL_FUNC=`echo "$SYMBOL_FUNC" | sed 's/.* (\(.*\)+\([0-9]*\))/\1/g'`

# address
SYMBOL_ADDR=`echo "$GEDIT_CURRENT_LINE" | sed 's/\(.*\)\(#[0-9][0-9]\)\s*pc\s*\([0-9a-fA-F]\{,8\}\)\s*\(.*\)/\3/g'`

#echo $SYMBOL_FUNC
#echo $SYMBOL_OFFSET
#echo $SYMBOL_FILE
#echo $SYMBOL_ADDR

SYMBOL_NEW_ADDR=`$TOOL_OBJDUMP -C -t $SYMBOL_PATH/$SYMBOL_FILE | grep "\.text" | grep -F "$SYMBOL_FUNC"`

# If there are lot of matched, do a reversing matching
SYMBOL_MATCHED=`echo "$SYMBOL_NEW_ADDR" | wc -l`
echo "matched symbols: $SYMBOL_MATCHED"
if [ $SYMBOL_MATCHED -gt 1 ]; then
	while read matched
	do
		echo "$SYMBOL_FUNC" | grep -q -F `echo $matched | awk '{print $6}'`
		if [ "$?" -eq "0" ]; then
			echo "    matched: $matched"
			export SYMBOL_NEW_ADDR="$matched"
		else
			echo "    not matched: $matched"
		fi
	done <<< "$SYMBOL_NEW_ADDR"
fi
SYMBOL_NEW_ADDR=`echo $SYMBOL_NEW_ADDR | sed 's/\([0-9a-fA-F]\{,8\}\).*/\1/g'`

SYMBOL_NEW_ADDR=`echo 16o $((0x$SYMBOL_NEW_ADDR)) $SYMBOL_OFFSET + p | dc`

SYMBOL_ADDR_START=`echo 16o $((0x$SYMBOL_NEW_ADDR)) 16 - p | dc`
SYMBOL_ADDR_STOP=`echo 16o $((0x$SYMBOL_NEW_ADDR)) 16 + p | dc`
SYMBOL_LOWER_ADDR=`echo $SYMBOL_NEW_ADDR | tr '[:upper:]' '[:lower:]'`

echo "$TOOL_OBJDUMP -Cd $SYMBOL_PATH/$SYMBOL_FILE --start-addr=0x$SYMBOL_ADDR_START --stop-addr=0x$SYMBOL_ADDR_STOP"
$TOOL_OBJDUMP -Cd $SYMBOL_PATH/$SYMBOL_FILE --start-addr=0x$SYMBOL_ADDR_START --stop-addr=0x$SYMBOL_ADDR_STOP | sed "s/  $SYMBOL_LOWER_ADDR/> $SYMBOL_LOWER_ADDR/g"

echo ==============================
echo $SYMBOL_NEW_ADDR
echo
echo "arm-eabi-addr2line -e \"$SYMBOL_PATH/$SYMBOL_FILE\" \"$SYMBOL_NEW_ADDR\""
$TOOL_ADDR2LINE -f -C -e "$SYMBOL_PATH/$SYMBOL_FILE" "$SYMBOL_NEW_ADDR"
echo
echo ==============================

fi
